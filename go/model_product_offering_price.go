/*
 * Product Catalog View
 *
 * Product Catalog View
 *
 * API version: 0.0.2
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"time"
)

// Is based on both the basic cost to develop and produce products and the enterprises policy on revenue targets. This price may be further revised through discounting (productOfferPriceAlteration). The price, applied for a productOffering may also be influenced by the productOfferingTerm, the customer selected, eg: a productOffering can be offered with multiple terms, like commitment periods for the contract. The price may be influenced by this productOfferingTerm. A productOffering may be cheaper with a 24 month commitment than with a 12 month commitment.
type ProductOfferingPrice struct {
	// the immediate base class type of this product offering
	BaseType string `json:"@baseType,omitempty"`
	// The class type of this Product offering
	Type_ string `json:"@type,omitempty"`
	// this object represents a bundle relationship from a bundle product offering price (parent) to a simple product offering price (child). A simple product offering price may participate in more than one bundle relationship.
	BundledPopRelationship []BundledProductOfferingPriceRelationship `json:"bundledPopRelationship,omitempty"`
	// unique Code for external use of this pricing.
	Code string `json:"code,omitempty"`
	// The Constraint resource represents a policy/rule applied to ProductOfferingPrice.
	Constraint []ConstraintRef `json:"constraint,omitempty"`
	CreatedBy string `json:"createdBy,omitempty"`
	CreatedOn time.Time `json:"createdOn,omitempty"`
	// Description of the productOfferingPrice
	Description string `json:"description,omitempty"`
	// A String. This is ID/Primary key/Unique ID of the entity which is loaded/inserted/imported in BM Catalog.
	ExternalID string `json:"externalID,omitempty"`
	// Reference of the ProductOfferingPrice
	Href string `json:"href,omitempty"`
	// unique id of this resource
	Id string `json:"id,omitempty"`
	// A flag indicating if this ProductOfferingPrice is composite (bundle) or not
	IsBundle bool `json:"isBundle,omitempty"`
	// the last update time of this ProductOfferingPrice
	LastUpdate time.Time `json:"lastUpdate,omitempty"`
	LastUpdatedBy string `json:"lastUpdatedBy,omitempty"`
	// the lifecycle status of this ProductOfferingPrice
	LifecycleStatus string `json:"lifecycleStatus,omitempty"`
	// A base / value business entity used to represent money
	Money *Money `json:"money,omitempty"`
	// Name of the productOfferingPrice
	Name string `json:"name,omitempty"`
	// Percentage to apply for ProductOfferPriceAlteration (Discount)
	Percentage float32 `json:"percentage,omitempty"`
	// Place defines the places where the products are sold or delivered.
	Place []PlaceRef `json:"place,omitempty"`
	// Product Offering Prices related to this Product Offering Price, for example a price alteration such as allowance or discount
	PopRelationship []ProductOfferingPriceRelationship `json:"popRelationship,omitempty"`
	// The amount of money that characterizes the price.
	Price *Money `json:"price,omitempty"`
	// A category that describes the price, such as recurring, discount, allowance, penalty, and so forth.
	PriceType string `json:"priceType,omitempty"`
	// The PricingLogicAlgorithm entity represents an instantiation of an interface specification to external rating function (without a modeled behavior in SID). Some of the parameters of the interface definition may be already set (such as price per unit) and some may be gathered during the rating process from the event (such as call duration) or from ProductCharacteristicValues (such as assigned bandwidth).
	PricingLogicAlgorithm []PricingLogicAlgorithm `json:"pricingLogicAlgorithm,omitempty"`
	// ProductOffering Ref represent object under OfferingPrice level
	ProductOffering *ProductOffering `json:"productOffering,omitempty"`
	// A list of conditions under which a ProductOfferingPrice is made available to Customers. For instance, a Product Offering Price can be offered with multiple commitment periods.
	ProductOfferingTerm []ProductOfferingTerm `json:"productOfferingTerm,omitempty"`
	// the period of the recurring charge:  1, 2, ... .It sets to zero if it is not applicable
	RecurringChargePeriodLength int32 `json:"recurringChargePeriodLength,omitempty"`
	// The period to repeat the application of the price Could be month, week...
	RecurringChargePeriodType string `json:"recurringChargePeriodType,omitempty"`
	// A use of the SpecificationCharacteristicValue by a ProductOfferingPrice to which additional properties (attributes) apply or override the properties of similar properties contained in SpecificationCharacteristicValue. It should be noted that characteristics which their value(s) addressed by this object must exist in corresponding specification. The available characteristic values for a SpecificationCharacteristic in a specification can be modified at the ProductOffering and ProcuctOfferingPrice level. The list of values in SpecificationCharacteristicValueUse is a strict subset of the list of values as defined in the corresponding specification characteristics.
	SpecCharValueUse []SpecificationCharacteristicValueUse `json:"specCharValueUse,omitempty"`
	// An amount of money levied on the price of a Product by a legislative body.
	Tax []TaxItem `json:"tax,omitempty"`
	// A number and unit representing how many (for instance 1 dozen) of an ProductOffering is available at the offered price. Its meaning depends on the priceType. It could be a price, a rate, or a discount
	UnitOfMeasure *Quantity `json:"unitOfMeasure,omitempty"`
	// The period for which the productOfferingPrice is valid
	ValidFor *TimePeriod `json:"validFor,omitempty"`
	// ProductOffering version
	Version string `json:"version,omitempty"`
}
