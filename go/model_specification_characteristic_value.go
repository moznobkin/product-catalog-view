/*
 * Product Catalog View
 *
 * Product Catalog View
 *
 * API version: 0.0.2
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

// A SpecificationCharacteristicValue object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a SpecificationCharacteristic object. The values of the attributes in the SpecificationCharacteristicValue object describe the values of the attributes that a corresponding SpecificationCharacteristic object can take on.
type SpecificationCharacteristicValue struct {
	// When sub-classing, this defines the super-class
	BaseType string `json:"@baseType,omitempty"`
	// A URI to a JSON-Schema file that defines additional attributes and relationships
	SchemaLocation string `json:"@schemaLocation,omitempty"`
	// When sub-classing, this defines the sub-class entity name
	Type_ string `json:"@type,omitempty"`
	// Indicates if the value is the default value for a characteristic
	IsDefault bool `json:"isDefault,omitempty"`
	// An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo attributes. If applicable, possible values are \"open\", \"closed\", \"closedBottom\" and \"closedTop\".
	RangeInterval string `json:"rangeInterval,omitempty"`
	// Regular expression to define constraint on the allowed value
	Regex string `json:"regex,omitempty"`
	// A length, surface, volume, dry measure, liquid measure, money, weight, time, and the like. In general, a determinate quantity or magnitude of the kind designated, taken as a standard of comparison for others of the same kind, in assigning to them numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
	UnitOfMeasure string `json:"unitOfMeasure,omitempty"`
	// The period of time for which a value is applicable
	ValidFor *TimePeriod `json:"validFor,omitempty"`
	// A discrete value that the characteristic can take on.
	Value string `json:"value"`
	// The low range value that a characteristic can take on
	ValueFrom string `json:"valueFrom,omitempty"`
	ValueReference string `json:"valueReference,omitempty"`
	// The upper range value that a characteristic can take on
	ValueTo string `json:"valueTo,omitempty"`
	// A kind of value that the characteristic can take on, such as numeric, text, and so forth
	ValueType string `json:"valueType,omitempty"`
}
