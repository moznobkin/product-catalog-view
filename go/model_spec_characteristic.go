/*
 * Product Catalog View
 *
 * Product Catalog View
 *
 * API version: 0.0.2
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"time"
)

// This class represents the key features of this service specification. For example, bandwidth is a characteristic of many different types of services; if bandwidth is a relevant characteristic (e.g., from the point-of-view of a Customer obtaining this Service via a Product) then bandwidth would be a SpecCharacteristic for that particular Service.
type SpecCharacteristic struct {
	// When sub-classing, this defines the super-class
	BaseType string `json:"@baseType,omitempty"`
	// When sub-classing, this defines the sub-class entity name
	Type_ string `json:"@type,omitempty"`
	CharacteristicType string `json:"characteristicType,omitempty"`
	// Code of Characteristics for external use. It will be the system generated code and not required in input
	Code string `json:"code,omitempty"`
	// If true, the Boolean indicates that the SpecCharacteristic is configurable
	Configurable bool `json:"configurable,omitempty"`
	// A String. This is the place where we will define the place where characteristic will be defined.
	ConfigurationStage string `json:"configurationStage,omitempty"`
	CreatedBy string `json:"createdBy,omitempty"`
	CreatedOn time.Time `json:"createdOn,omitempty"`
	// A narrative that explains in detail what the SpecCharacteristic is
	Description string `json:"description,omitempty"`
	// A String. Here we can define the display name of the Characteristic.
	DisplayName string `json:"displayName,omitempty"`
	DisplaySequence int32 `json:"displaySequence,omitempty"`
	// An indicator that specifies that the values for the characteristic can be extended by adding new values when instantiating a characteristic for an Entity.
	Extensible bool `json:"extensible,omitempty"`
	ExternalID string `json:"externalID,omitempty"`
	Href string `json:"href,omitempty"`
	// Unique identifier of Characteristics for external use. It will be the system generated code and not required in input.
	Id string `json:"id,omitempty"`
	// An indicator that specifies if a value is unique for the specification. Possible values are; \"unique while value is in effect\" and \"unique whether value is in effect or not\"
	IsUnique bool `json:"isUnique,omitempty"`
	IsVisible bool `json:"isVisible,omitempty"`
	LastUpdate time.Time `json:"lastUpdate,omitempty"`
	LastUpdatedBy string `json:"lastUpdatedBy,omitempty"`
	// The maximum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where five is the value for the maxCardinality.
	MaxCardinality int32 `json:"maxCardinality,omitempty"`
	// The minimum number of instances a CharacteristicValue can take on. For example, zero to five phone numbers in a group calling plan, where zero is the value for the minCardinality.
	MinCardinality int32 `json:"minCardinality,omitempty"`
	// A word, term, or phrase by which this characteristic specification is known and distinguished from other characteristic specifications.
	Name string `json:"name,omitempty"`
	ReferenceId string `json:"referenceId,omitempty"`
	// A rule or principle represented in regular expression used to derive the value of a characteristic value.
	Regex string `json:"regex,omitempty"`
	// A list of spec char relationships (SpecCharRelationship [*]). An aggregation, migration, substitution, dependency or exclusivity relationship between/among Specification Characteristics.
	SpecCharRelationship []SpecCharRelationship `json:"specCharRelationship,omitempty"`
	// A list of service spec characteristic values (SpecCharacteristicValue [*]). A SpecCharacteristicValue object is used to define a set of attributes, each of which can be assigned to a corresponding set of attributes in a SpecCharacteristic object. The values of the attributes in the SpecCharacteristicValue object describe the values of the attributes that a corresponding SpecCharacteristic object can take on.
	SpecCharacteristicValue []SpecCharacteristicValue `json:"specCharacteristicValue,omitempty"`
	// A kind of value that the characteristic can take on, such as numeric, text and so forth
	ValueType string `json:"valueType,omitempty"`
}
